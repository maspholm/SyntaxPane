apply plugin: 'java'

version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

task testAPI(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    standardInput = System.in
    main = "com.test.ui.SyntaxEditPaneSample"
}

configurations {
    jaxDoclet
}

repositories {
	  mavenCentral()
}

dependencies {
    testCompile 'junit:junit:[4,)'
    
    compile 'org.json:json:20090211'
    compile 'org.apache.commons:commons-io:1.3.2'

    jaxDoclet 'org.json:json:20090211'
    jaxDoclet 'org.apache.commons:commons-io:1.3.2'
}

task generateJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Syntax Pane Jar', 'Implementation-Version': version
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude('com/test/**')
    with jar
}

task generateRestApiDocs(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = sourceSets.main.runtimeClasspath
    options.docletpath = configurations.jaxDoclet.files.asType(List)
    exclude('com/test/**')
}

task zipDoc(type: Zip, dependsOn: 'generateRestApiDocs') {
    from 'build/docs'
    archiveName "${baseName}-Document-${version}.${extension}"
}